"""Add storage_path to photos table

Revision ID: 02812419dac5
Revises: 
Create Date: 2025-05-17 15:14:57.000733

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '02812419dac5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('folders', sa.Column('description', sa.Text(), nullable=True))
    op.add_column('folders', sa.Column('cover_photo_url', sa.String(length=1024), nullable=True))
    op.add_column('folders', sa.Column('is_public', sa.Boolean(), nullable=True))
    op.drop_constraint('folders_name_key', 'folders', type_='unique')
    op.create_index(op.f('ix_folders_is_public'), 'folders', ['is_public'], unique=False)
    op.create_index(op.f('ix_folders_name'), 'folders', ['name'], unique=True)
    op.add_column('photos', sa.Column('storage_path', sa.String(length=1024), nullable=True))
    op.add_column('photos', sa.Column('uploaded_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.alter_column('photos', 'folder_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_index(op.f('ix_photos_folder_id'), 'photos', ['folder_id'], unique=False)
    op.create_index('ix_photos_folder_public', 'photos', ['folder_id', 'is_public'], unique=False)
    op.create_index(op.f('ix_photos_gcs_path'), 'photos', ['gcs_path'], unique=False)
    op.create_index(op.f('ix_photos_is_public'), 'photos', ['is_public'], unique=False)
    op.create_index(op.f('ix_photos_location_tag'), 'photos', ['location_tag'], unique=False)
    op.create_index(op.f('ix_photos_storage_path'), 'photos', ['storage_path'], unique=False)
    op.create_index(op.f('ix_photos_title'), 'photos', ['title'], unique=False)
    op.create_index(op.f('ix_photos_uploaded_at'), 'photos', ['uploaded_at'], unique=False)
    op.create_index('ix_photos_uploaded_public', 'photos', ['uploaded_at', 'is_public'], unique=False)
    op.create_index(op.f('ix_photos_url'), 'photos', ['url'], unique=False)
    op.drop_constraint('photos_folder_id_fkey', 'photos', type_='foreignkey')
    op.create_foreign_key(None, 'photos', 'folders', ['folder_id'], ['id'], ondelete='SET NULL')
    op.drop_column('photos', 'date_taken')
    op.drop_column('photos', 'date_uploaded')
    op.drop_column('photos', 'updated_at')
    op.drop_column('photos', 'created_at')
    op.drop_column('photos', 'width')
    op.drop_column('photos', 'filename')
    op.drop_column('photos', 'height')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('photos', sa.Column('height', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('photos', sa.Column('filename', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('photos', sa.Column('width', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('photos', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('photos', sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('photos', sa.Column('date_uploaded', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('photos', sa.Column('date_taken', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'photos', type_='foreignkey')
    op.create_foreign_key('photos_folder_id_fkey', 'photos', 'folders', ['folder_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_photos_url'), table_name='photos')
    op.drop_index('ix_photos_uploaded_public', table_name='photos')
    op.drop_index(op.f('ix_photos_uploaded_at'), table_name='photos')
    op.drop_index(op.f('ix_photos_title'), table_name='photos')
    op.drop_index(op.f('ix_photos_storage_path'), table_name='photos')
    op.drop_index(op.f('ix_photos_location_tag'), table_name='photos')
    op.drop_index(op.f('ix_photos_is_public'), table_name='photos')
    op.drop_index(op.f('ix_photos_gcs_path'), table_name='photos')
    op.drop_index('ix_photos_folder_public', table_name='photos')
    op.drop_index(op.f('ix_photos_folder_id'), table_name='photos')
    op.alter_column('photos', 'folder_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('photos', 'uploaded_at')
    op.drop_column('photos', 'storage_path')
    op.drop_index(op.f('ix_folders_name'), table_name='folders')
    op.drop_index(op.f('ix_folders_is_public'), table_name='folders')
    op.create_unique_constraint('folders_name_key', 'folders', ['name'])
    op.drop_column('folders', 'is_public')
    op.drop_column('folders', 'cover_photo_url')
    op.drop_column('folders', 'description')
    # ### end Alembic commands ###
